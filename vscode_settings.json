{
  "emmet": {
    "includeLanguages": {
      "vue-html": "html",
      "vue": "html"
    },
    "excludeLanguages": [
      "typescript",
      "typescriptreact"
    ]
  },

  "vim.leader": "<space>",
  "vim.ignorecase": true,
  "vim.textwidth": 78,
  "vim.insertModeKeyBindings": [{
    "before": ["<c-v>"],
    "after": [],
    "commands": [{
        "command": "editor.action.clipboardPasteAction",
        "args": []
    }]
  }],
  "vim.visualModeKeyBindings": [{
    "before": ["p"],
    "after": ["P"]
  }],
  "vim.normalModeKeyBindingsNonRecursive": [{
    "before": ["n"],
    "after": ["n", "z", "z"]
  }, {
    "before": ["N"],
    "after": ["N", "z", "z"]
  }, {
    "before": ["Q"],
    "after": ["g", "q", "i", "p"]
  }, {
    "comment": "delete a character without yanking",
    "before": ["x"],
    "after": ["\"", "_", "x"]
  }, {
    "comment": "backward delete a character without yanking",
    "before": ["X"],
    "after": ["\"", "_", "X"]
  }],
  "vim.otherModesKeyBindingsNonRecursive": [{
    "before": ["Z", "Z"],
    "after": [],
    "commands": [{
      "command": "workbench.action.closeActiveEditor",
      "args": []
    }]
  },
  {
    "before": ["<c-o>"],
    "after": [],
    "commands": [{
        "command": "workbench.action.files.openFile",
        "args": []
    }]
  },
  {
    "before": ["<c-w>"],
    "after": [],
    "commands": [{
        "command": "workbench.action.closeActiveEditor",
        "args": []
    }]
  },
  {
    "before": ["<c-]>"],
    "after": [],
    "commands": [{
        "command": "editor.action.openLink",
        "args": []
    }]
  },
  {
    "before": ["<c-[>"],
    "after": [],
    "commands": [{
        "command": "workbench.action.navigateBack",
        "args": []
    }]
  },
  {
    "before": ["<leader>", "p"],
    "after": [],
    "commands": [{
        "command": "workbench.action.showCommandPalette",
        "args": []
    }]
  }],

  "editor.detectIndentation": false,
  "editor.insertSpaces": true,
  "editor.tabSize": 2,
  // Disable 'n references' atop of functions
  "editor.codeLens": false,
  "editor.lineNumbers": "off",
  "editor.links": true,
  "editor.minimap.enabled": false,
  "editor.autoClosingBrackets": "never",
  "editor.autoClosingQuotes": "never",
  "editor.autoClosingTags": "never",
  "editor.acceptSuggestionOnEnter": "off",
  "editor.suggest.matchOnWordStartOnly": false,
  "editor.suggestOnTriggerCharacters": false,
  "editor.guides.indentation": false,
  "editor.guides.bracketPairs": true,
  "editor.renderLineHighlight": "line",
  "editor.rulers": [78],
  "editor.glyphMargin": true,
  "editor.wordWrap": "off",
  "editor.fontFamily": "JetBrainsMono Nerd Font, JetBrainsMono NF, JetBrainsMono",
  "editor.semanticHighlighting.enabled": true,
  "editor.fontSize": 16,
  "editor.fontLigatures": false,
  "editor.renderControlCharacters": false,
  "editor.cursorStyle": "line",
  "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
  "editor.bracketPairColorization.enabled": false,
  // Do not highlight cyrillic letters
  "editor.unicodeHighlight.ambiguousCharacters": false,
  "editor.guides.bracketPairsHorizontal": true,
  "editor.stickyScroll.enabled": true,
  "editor.accessibilitySupport": "off",
  "editor.formatOnSave": false,
  "diffEditor.wordWrap": "off",
  "terminal.integrated": {
    "fontFamily": "JetBrainsMono Nerd Font, JetBrainsMono NF, JetBrainsMono",
    "fontSize": 16,
    "commandsToSkipShell": [
      "workbench.action.toggleSidebarVisibility",
      "workbench.action.focusSideBar",
      "workbench.action.toggleAuxiliaryBar",
      "workbench.action.focusAuxiliaryBar",
      "workbench.action.focusActiveEditorGroup"
    ],
    "env.osx": {
      "FIG_NEW_SESSION": "1"
    },
    // Don't display sticky scroll atop of the terminal since terminal
    // vertical space is limited and such are is 2-3 lines, completely
    // obscuring actual output
    "stickyScroll.enabled": false
  },
  "window.menuBarVisibility": "toggle",
  "window.openFilesInNewWindow": "off",
  "window.openFoldersInNewWindow": "off",
  "window.newWindowDimensions": "maximized",
  "window.commandCenter": true,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.autoReveal": false,
  "explorer.openEditors.visible": 0,
  "explorer.excludeGitIgnore": true,
  "git.confirmSync": false,
  "extensions.ignoreRecommendations": false,
  "breadcrumbs.enabled": true,
  "telemetry.enableTelemetry": false,
  "debug.node.autoAttach": "disabled",
  "scm.diffDecorations": "none",
  "vsicons.presets.foldersAllDefaultIcon": true,
  "vsicons.dontShowNewVersionMessage": true,
  "keyboard.dispatch": "keyCode",
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "security.workspace.trust.untrustedFiles": "open",
  "workbench.startupEditor": "none",
  "workbench.tips.enabled": false,
  "workbench.editor.labelFormat": "short",
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  "workbench.iconTheme": "vscode-great-icons",
  "workbench.colorCustomizations": {
  },
  "files": {
    "eol": "\n",
    "associations": {
      "*.js": "typescript",
      "*.ts": "typescript",
      "*.tsx": "typescriptreact",
      "*.json": "jsonc"
    }
  },
  "python.languageServer": "Pylance",
  "python.analysis.typeCheckingMode": "basic",
  "python.showStartPage": false,
  "python.analysis.inlayHints.functionReturnTypes": false,
  "python.analysis.inlayHints.variableTypes": false,
  "python.terminal.activateEnvironment": false,
  "javascript.inlayHints.parameterNames.enabled": "none",
  "javascript.inlayHints.variableTypes.enabled": false,
  "javascript.inlayHints.parameterTypes.enabled": false,
  "typescript.inlayHints.parameterNames.enabled": "none",
  "typescript.inlayHints.variableTypes.enabled": false,
  "typescript.inlayHints.parameterTypes.enabled": false,
  "java.errors.incompleteClasspath.severity": "ignore",
  "Lua.telemetry.enable": false,
  "dart.warnWhenEditingFilesOutsideWorkspace": false,
  "powershell.integratedConsole.showOnStartup": false,

  "[python]": {
    "editor.tabSize": 4
  },
  "[ruby]": {
    "editor.formatOnSave": false,
    "editor.defaultFormatter": "Shopify.ruby-lsp"
  },
  "[javascript]": {
  },
  "[rust]": {
    "editor.tabSize": 4
  },
  "[dart]": {
    "editor.formatOnSave": false,
    "editor.formatOnType": false,
    "editor.tabCompletion": "onlySnippets",
    "editor.suggestSelection": "first",
    "editor.wordBasedSuggestions": "off"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "git.openRepositoryInParentFolders": "never",
  "AutoHotkey2": {
    "InterpreterPath": "AutoHotkey.exe"
  },
  "auto-close-tag.activationOnLanguage": [
    "xml",
    "php",
    "javascriptreact",
    "typescriptreact",
    "vue",
    "erb",
    "html"
  ],
  "workbench.editor.empty.hint": "hidden",
  "xi.debug": false,
  "cSpell": {
    "checkLimit": 10000,
    "minWordLength": 2,
    "language": "en,ru",
    "flagWords": [
      "аттрибут",
      "аттрибута",
      "аттрибуте"
    ],
    "ignoreRegExpList": [
      "\\\\x[0-9a-fA-F]{2}"
    ],
    "customDictionaries": {
      "personal": {
        "name": "personal",
        "path": "~/dotfiles/dictionary.txt"
      }
    }
  },
  "powershell.powerShellAdditionalExePaths": {
    "Shell": "/opt/homebrew/bin/pwsh"
  },
  "disable-lcd-text": true,
  "workbench.colorTheme": "grigoryvp memory theme",
  "cmake.showOptionsMovedNotification": false,
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.insertSpaces": true,
    "editor.tabSize": 2
  },
  "github.copilot.enable": {
    "*": false,
    "plaintext": false,
    "markdown": false,
    "scminput": false
  },
  "redhat.telemetry.enabled": false,
  "vs-kubernetes": {
    "vscode-kubernetes.helm-path-mac": "/Users/user/.vs-kubernetes/tools/helm/darwin-arm64/helm",
    "vscode-kubernetes.minikube-path-mac": "/Users/user/.vs-kubernetes/tools/minikube/darwin-arm64/minikube"
  },
  "workbench.activityBar.location": "top",
  "docker.extension.enableComposeLanguageServer": false
}
